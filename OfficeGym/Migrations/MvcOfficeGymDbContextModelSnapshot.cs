// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficeGym.Data;

#nullable disable

namespace OfficeGym.Migrations
{
    [DbContext(typeof(MvcOfficeGymDbContext))]
    partial class MvcOfficeGymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfficeGym.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<bool>("Car")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OfficeGym.Models.EmployeeOfficeEquipmentGym", b =>
                {
                    b.Property<int>("EmployeeOfficeEquipmentGymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeOfficeEquipmentGymId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentGymTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OfficeEquipmentGymId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeOfficeEquipmentGymId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OfficeEquipmentGymId");

                    b.ToTable("EmployeesOfficeEquipmentsGym");
                });

            modelBuilder.Entity("OfficeGym.Models.EmployeeSales", b =>
                {
                    b.Property<int>("EmployeeSalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeSalesId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("ProductsQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StoresQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSalesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesSales");
                });

            modelBuilder.Entity("OfficeGym.Models.OfficeEquipmentGym", b =>
                {
                    b.Property<int>("OfficeEquipmentGymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeEquipmentGymId"));

                    b.Property<int>("AvailableEquipments")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentGymName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MotorHorsePower")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeEquipmentGymId");

                    b.ToTable("OfficeEquipmentsGym");
                });

            modelBuilder.Entity("OfficeGym.Models.Vacation", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationId"));

                    b.Property<string>("AboutVacation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FunVacationCount")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VacationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("OfficeGym.Models.EmployeeOfficeEquipmentGym", b =>
                {
                    b.HasOne("OfficeGym.Models.Employee", "Employee")
                        .WithMany("EmployeesOfficeEquipmentsGym")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficeGym.Models.OfficeEquipmentGym", "OfficeEquipmentGym")
                        .WithMany("EmployeesOfficeEquipmentsGym")
                        .HasForeignKey("OfficeEquipmentGymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("OfficeEquipmentGym");
                });

            modelBuilder.Entity("OfficeGym.Models.EmployeeSales", b =>
                {
                    b.HasOne("OfficeGym.Models.Employee", "Employee")
                        .WithMany("EmployeesSales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OfficeGym.Models.Vacation", b =>
                {
                    b.HasOne("OfficeGym.Models.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OfficeGym.Models.Employee", b =>
                {
                    b.Navigation("EmployeesOfficeEquipmentsGym");

                    b.Navigation("EmployeesSales");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("OfficeGym.Models.OfficeEquipmentGym", b =>
                {
                    b.Navigation("EmployeesOfficeEquipmentsGym");
                });
#pragma warning restore 612, 618
        }
    }
}
